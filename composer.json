{
    "name": "mirko-pagliai/me-cms-photos",
    "description": "Photos plugin for MeCms",
    "homepage": "https://github.com/mirko-pagliai/me-cms-photos",
    "type": "cakephp-plugin",
    "license": "MIT",
    "authors": [
        {
            "name": "Mirko Pagliai",
            "email": "mirko.pagliai@gmail.com"
        }
    ],
    "require": {
        "php": ">=7.2",
        "mirko-pagliai/me-cms": "^2.29"
    },
    "require-dev": {
        "cakephp/cakephp-codesniffer": "^4.0",
        "phpunit/phpunit": "^8.0"
    },
    "repositories": [
        {
            "type": "composer",
            "url": "https://asset-packagist.org"
        },
        {
            "type": "package",
            "package": {
                "name": "ctlabvn/recaptcha",
                "version": "3.0.0",
                "source": {
                    "url": "https://github.com/ctlabvn/recaptcha.git",
                    "type": "git",
                    "reference": "3.0.0"
                }
            }
        }
    ],
    "autoload": {
        "psr-4": {
            "MeCms\\Photos\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "MeCms\\Photos\\Test\\": "tests",
            "Recaptcha\\": "vendor/ctlabvn/recaptcha/src/",
            "App\\": "tests/test_app/TestApp"
        }
    },
    "scripts": {
        "check": [
            "@cs-check",
            "@update-lowest",
            "@test",
            "@composer update",
            "@test",
            "@stan-setup",
            "@stan"
        ],
        "cs-check": "phpcs --standard=phpcs.xml.dist",
        "cs-fix": "phpcbf --standard=phpcs.xml.dist",
        "test": "phpunit",
        "test-coverage": "phpunit --coverage-html coverage",
        "phpstan": "phpstan.phar analyse",
        "psalm": "psalm.phar",
        "stan": [
            "@phpstan",
            "@psalm"
        ],
        "stan-setup": "cp composer.json composer.backup && composer require --dev phpstan/phpstan:^0.12 psalm/phar:^3.18 && mv composer.backup composer.json",
        "update-lowest": "@composer update --prefer-lowest"
    }
}
